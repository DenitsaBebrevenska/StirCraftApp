// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StirCraftApp.Infrastructure.Data;

#nullable disable

namespace StirCraftApp.Infrastructure.Migrations
{
    [DbContext(typeof(StirCraftDbContext))]
    [Migration("20241203181059_AddedCreatedOnAndUpdatedOnForReplyAndComment")]
    partial class AddedCreatedOnAndUpdatedOnForReplyAndComment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "eec0c147-bcdc-49f0-aadc-9b2d906ee763",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c63bad56-e374-4a01-ac1a-f49231cd1e2f",
                            Name = "Cook",
                            NormalizedName = "COOK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "98f61b51-9ae7-4107-a247-29d1c68a7d32",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "6d362fcc-dc94-4385-8b38-844527a2c579",
                            RoleId = "eec0c147-bcdc-49f0-aadc-9b2d906ee763"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique()
                        .HasFilter("[DisplayName] IS NOT NULL");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1677852512190-5a89ee399aed?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "ca768cdc-2315-48b6-8ab1-ea5a3b2d252b",
                            DisplayName = "ChefBob",
                            Email = "bob@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BOB@EXAMPLE.COM",
                            NormalizedUserName = "BOB@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOx714plj9VxMCwPfbK/b6Sx0pPU1ZJfhKb/4Nk1q0uBGHTiPoLmx5T74KZ85GNMIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a97ba6e3-d948-4861-af7f-16efcc3f438b",
                            TwoFactorEnabled = false,
                            UserName = "bob@example.com"
                        },
                        new
                        {
                            Id = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1661768360749-b60196445a6d?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "daa285e6-a66f-4161-870f-0dd3b9738221",
                            DisplayName = "KateMiddleton",
                            Email = "kate@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "KATE@EXAMPLE.COM",
                            NormalizedUserName = "KATE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL0SG2B7AQlQgdLK8ZX+UsbFhASQA93O0Qt+0DOFqe3BU8MmB+NJmlWlbo9+VDXqDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e029340f-a919-40f9-9051-ba17d1de63f7",
                            TwoFactorEnabled = false,
                            UserName = "kate@example.com"
                        },
                        new
                        {
                            Id = "98f61b51-9ae7-4107-a247-29d1c68a7d32",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1673830185832-2d5f30a900ed?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "73262ce9-5e6f-45c5-8ebf-243dc715a0bb",
                            DisplayName = "AdrianTheAdventurer",
                            Email = "adrian@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADRIAN@EXAMPLE.COM",
                            NormalizedUserName = "ADRIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPqnSK3BVAUUWLDRiLcLkDmNIP1atHo0cfkmq7Lz2ama656wzovrP3FynxTbflhwXg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40114093-89eb-4a6f-b48c-0d922377cbe8",
                            TwoFactorEnabled = false,
                            UserName = "adrian@example.com"
                        },
                        new
                        {
                            Id = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1658506818080-0546c7636830?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "821f0ae2-62ca-4b3f-9aab-88fa8a115a7f",
                            DisplayName = "LoveLink",
                            Email = "zelda@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ZELDA@EXAMPLE.COM",
                            NormalizedUserName = "ZELDA@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEN7MqK/bBUrXAKN9tOFhb4BLSzQLLxWm36P1T/JrqNTbKMLv+7+nGehVmKa77u2oYw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "929f5b2b-2f6d-4733-93c7-73e4a1ef4a7a",
                            TwoFactorEnabled = false,
                            UserName = "zelda@example.com"
                        },
                        new
                        {
                            Id = "1a575c2a-065c-487a-8b56-cfd897b1b5ce",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1661778091956-15dbe6e47442?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "d256909c-0b9f-41b4-a606-2851ea5cb140",
                            DisplayName = "ThePowerOfMorgoth",
                            Email = "galadriel@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GALADRIEL@EXAMPLE.COM",
                            NormalizedUserName = "GALADRIEL@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEB1AGXM3xikSMWNC1Z93GhMkL1cU15DJu0PDT1HyXpkMEys367w3sAgR1kRPwJKHIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9ff8c78e-d631-4121-b39b-402981821e9c",
                            TwoFactorEnabled = false,
                            UserName = "galadriel@example.com"
                        },
                        new
                        {
                            Id = "6d362fcc-dc94-4385-8b38-844527a2c579",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8e57c424-9350-4b81-bc3b-94942f9ebe6b",
                            DisplayName = "StirCraftAdmin",
                            Email = "admin@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDV6V1cYsRmTTZz47IPkRVLQdwNyeWwIqJrw3kATdZdrOu/sqI75dJfPRmNQpYMRzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9e788e9-9576-4ec4-b320-69211d1ab06f",
                            TwoFactorEnabled = false,
                            UserName = "admin@example.com"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Asian Cuisine"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Amuse Bouche"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Italian Cuisine"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Grill & Barbecue"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Vegetarian"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Vegan"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Soups & Stews"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Comfort Food"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Name = "French Cuisine"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Name = "Mexican Cuisine"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Name = "Mediterranean Cuisine"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Name = "Baking & Pastries"
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            Name = "Russian Cuisine"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "My grandchildren love these pancakes! They are a very good choice for a healthy breakfast!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 3,
                            Title = "Fabulous!",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 2,
                            Body = "So delicious, yet so healthy!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 2,
                            Title = "Awesome salad",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        },
                        new
                        {
                            Id = 3,
                            Body = "I really need help. How long should I cook the beef strips for? I`m afraid they`ll end up raw...",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 5,
                            Title = "Need help!",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Best banana bread ever!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 7,
                            Title = "Love",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        },
                        new
                        {
                            Id = 5,
                            Body = "I love this. Cheers to the creator!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 6,
                            Title = "Great!",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 6,
                            Body = "I love this!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 9,
                            Title = "NOM NOM!",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Quick and easy, it is indeed a great recipe for fast dinner!",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RecipeId = 11,
                            Title = "Love it",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CookingRankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RankingPoints")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CookingRankId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId");

                    b.ToTable("Cooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "I am a home cook with love for classic comfort foods. I often experiment with traditional recipes, adding my personal twist to create something familiar yet unique.",
                            CookingRankId = 1,
                            IsDeleted = false,
                            RankingPoints = 10L,
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb"
                        },
                        new
                        {
                            Id = 2,
                            About = "Inspired by my travels, I enjoy combining fresh, vibrant ingredients like olive oil, herbs, and seafood to create dishes that are both healthy and full of flavor. My philosophy in cooking revolves around simplicity. I love the Mediterranean Cuisine.",
                            CookingRankId = 3,
                            IsDeleted = false,
                            RankingPoints = 1200L,
                            UserId = "98f61b51-9ae7-4107-a247-29d1c68a7d32"
                        },
                        new
                        {
                            Id = 3,
                            About = "I am passionate about modern fusion cuisine, blending flavors and techniques from around the world. I think of myself as quite innovative in the use of seasonal ingredients and attention to detail, making every meal an unforgettable experience. Also I excel at Asian cuisine, you can call me Senpai!",
                            CookingRankId = 5,
                            IsDeleted = false,
                            RankingPoints = 2200L,
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.CookingRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RequiredPoints")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("CookingRanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RequiredPoints = 0L,
                            Title = "StirCraftNovice"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RequiredPoints = 500L,
                            Title = "StirSpecialist"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RequiredPoints = 1000L,
                            Title = "FlavorOperative"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RequiredPoints = 1500L,
                            Title = "SeasonedCommander"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RequiredPoints = 2000L,
                            Title = "MasterOfStirCraft"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            RequiredPoints = 3000L,
                            Title = "CulinaryOverlord"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            RequiredPoints = 5000L,
                            Title = "StirCraftGod"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllergen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameInPlural")
                        .HasMaxLength(104)
                        .HasColumnType("nvarchar(104)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "flour"
                        },
                        new
                        {
                            Id = 2,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "egg",
                            NameInPlural = "eggs"
                        },
                        new
                        {
                            Id = 3,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "sugar"
                        },
                        new
                        {
                            Id = 4,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "milk"
                        },
                        new
                        {
                            Id = 5,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "salt"
                        },
                        new
                        {
                            Id = 6,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "butter"
                        },
                        new
                        {
                            Id = 7,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "olive oil"
                        },
                        new
                        {
                            Id = 8,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "tomato",
                            NameInPlural = "tomatoes"
                        },
                        new
                        {
                            Id = 9,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "garlic"
                        },
                        new
                        {
                            Id = 10,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "onion",
                            NameInPlural = "onions"
                        },
                        new
                        {
                            Id = 11,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "chicken breast",
                            NameInPlural = "chicken breasts"
                        },
                        new
                        {
                            Id = 12,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "ground beef"
                        },
                        new
                        {
                            Id = 13,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "carrot",
                            NameInPlural = "carrots"
                        },
                        new
                        {
                            Id = 14,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "celery",
                            NameInPlural = "celeries"
                        },
                        new
                        {
                            Id = 15,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "almond",
                            NameInPlural = "almonds"
                        },
                        new
                        {
                            Id = 16,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "peanut",
                            NameInPlural = "peanuts"
                        },
                        new
                        {
                            Id = 17,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "soy sauce"
                        },
                        new
                        {
                            Id = 18,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "lemon",
                            NameInPlural = "lemons"
                        },
                        new
                        {
                            Id = 19,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "lime",
                            NameInPlural = "limes"
                        },
                        new
                        {
                            Id = 20,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "basil"
                        },
                        new
                        {
                            Id = 21,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "parsley"
                        },
                        new
                        {
                            Id = 22,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "mushroom",
                            NameInPlural = "mushrooms"
                        },
                        new
                        {
                            Id = 23,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "spinach"
                        },
                        new
                        {
                            Id = 24,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "coconut milk"
                        },
                        new
                        {
                            Id = 25,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "shrimp",
                            NameInPlural = "shrimps"
                        },
                        new
                        {
                            Id = 26,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "salmon",
                            NameInPlural = "salmons"
                        },
                        new
                        {
                            Id = 27,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "tofu"
                        },
                        new
                        {
                            Id = 28,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "chickpeas"
                        },
                        new
                        {
                            Id = 29,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "potato",
                            NameInPlural = "potatoes"
                        },
                        new
                        {
                            Id = 30,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "rice"
                        },
                        new
                        {
                            Id = 31,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "pasta"
                        },
                        new
                        {
                            Id = 32,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "broccoli"
                        },
                        new
                        {
                            Id = 33,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cauliflower"
                        },
                        new
                        {
                            Id = 34,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "green beans"
                        },
                        new
                        {
                            Id = 35,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "zucchini",
                            NameInPlural = "zucchinis"
                        },
                        new
                        {
                            Id = 36,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "corn",
                            NameInPlural = "corns"
                        },
                        new
                        {
                            Id = 37,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "cheese"
                        },
                        new
                        {
                            Id = 38,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "cream"
                        },
                        new
                        {
                            Id = 39,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "yogurt"
                        },
                        new
                        {
                            Id = 40,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "honey"
                        },
                        new
                        {
                            Id = 41,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "maple syrup"
                        },
                        new
                        {
                            Id = 42,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "baking powder"
                        },
                        new
                        {
                            Id = 43,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "yeast"
                        },
                        new
                        {
                            Id = 44,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cinnamon"
                        },
                        new
                        {
                            Id = 45,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cumin"
                        },
                        new
                        {
                            Id = 46,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "ginger"
                        },
                        new
                        {
                            Id = 47,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "vanilla extract"
                        },
                        new
                        {
                            Id = 48,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "black pepper"
                        },
                        new
                        {
                            Id = 49,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "oregano"
                        },
                        new
                        {
                            Id = 50,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "paprika"
                        },
                        new
                        {
                            Id = 51,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "spaghetti"
                        },
                        new
                        {
                            Id = 52,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "chili flakes"
                        },
                        new
                        {
                            Id = 53,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "chili powder"
                        },
                        new
                        {
                            Id = 54,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "quinoa"
                        },
                        new
                        {
                            Id = 55,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cucumber",
                            NameInPlural = "cucumbers"
                        },
                        new
                        {
                            Id = 56,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cherry tomato",
                            NameInPlural = "cherry tomatoes"
                        },
                        new
                        {
                            Id = 57,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "red onion",
                            NameInPlural = "red onions"
                        },
                        new
                        {
                            Id = 58,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "avocado",
                            NameInPlural = "avocados"
                        },
                        new
                        {
                            Id = 59,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "tahini"
                        },
                        new
                        {
                            Id = 60,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cilantro"
                        },
                        new
                        {
                            Id = 61,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "almond flour"
                        },
                        new
                        {
                            Id = 62,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "berries mix"
                        },
                        new
                        {
                            Id = 63,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "taco shell",
                            NameInPlural = "taco shells"
                        },
                        new
                        {
                            Id = 64,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "tortilla",
                            NameInPlural = "tortillas"
                        },
                        new
                        {
                            Id = 65,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "egg noodles"
                        },
                        new
                        {
                            Id = 66,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "mustard"
                        },
                        new
                        {
                            Id = 67,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "Worcestershire sauce"
                        },
                        new
                        {
                            Id = 68,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "sour cream"
                        },
                        new
                        {
                            Id = 69,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "jalapeño",
                            NameInPlural = "jalapeños"
                        },
                        new
                        {
                            Id = 70,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "beef"
                        },
                        new
                        {
                            Id = 71,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "banana",
                            NameInPlural = "bananas"
                        },
                        new
                        {
                            Id = 72,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "corn flour"
                        },
                        new
                        {
                            Id = 73,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "coconut flour"
                        },
                        new
                        {
                            Id = 74,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "oats"
                        },
                        new
                        {
                            Id = 75,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "brown sugar"
                        },
                        new
                        {
                            Id = 76,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "powdered sugar"
                        },
                        new
                        {
                            Id = 77,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "vegetable oil"
                        },
                        new
                        {
                            Id = 78,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "canned beans"
                        },
                        new
                        {
                            Id = 79,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "red bean paste"
                        },
                        new
                        {
                            Id = 80,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "lentils"
                        },
                        new
                        {
                            Id = 81,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "rice flour"
                        },
                        new
                        {
                            Id = 82,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "parmesan"
                        },
                        new
                        {
                            Id = 83,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "rice milk"
                        },
                        new
                        {
                            Id = 84,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "almond milk"
                        },
                        new
                        {
                            Id = 85,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "water"
                        },
                        new
                        {
                            Id = 86,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "matcha"
                        },
                        new
                        {
                            Id = 87,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "apple cider vinegar"
                        },
                        new
                        {
                            Id = 88,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "white wine vinegar"
                        },
                        new
                        {
                            Id = 89,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "balsamic vinegar"
                        },
                        new
                        {
                            Id = 90,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "red wine"
                        },
                        new
                        {
                            Id = 91,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "white wine"
                        },
                        new
                        {
                            Id = 92,
                            IsAdminApproved = true,
                            IsAllergen = true,
                            IsDeleted = false,
                            Name = "chocolate chips"
                        },
                        new
                        {
                            Id = 93,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "pumpkin",
                            NameInPlural = "pumpkins"
                        },
                        new
                        {
                            Id = 94,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "nutmeg"
                        },
                        new
                        {
                            Id = 95,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "cornstarch"
                        },
                        new
                        {
                            Id = 96,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "vegetable broth"
                        },
                        new
                        {
                            Id = 97,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "bay leaf",
                            NameInPlural = "bay leaves"
                        },
                        new
                        {
                            Id = 98,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "green pumpkin seeds"
                        },
                        new
                        {
                            Id = 99,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "rosemary"
                        },
                        new
                        {
                            Id = 100,
                            IsAdminApproved = true,
                            IsAllergen = false,
                            IsDeleted = false,
                            Name = "dill"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("MeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "g",
                            IsDeleted = false,
                            Name = "Gram"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "kg",
                            IsDeleted = false,
                            Name = "Kilogram"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "mg",
                            IsDeleted = false,
                            Name = "Milligram"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "oz",
                            IsDeleted = false,
                            Name = "Ounce"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "lb",
                            IsDeleted = false,
                            Name = "Pound"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "L",
                            IsDeleted = false,
                            Name = "Liter"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "mL",
                            IsDeleted = false,
                            Name = "Milliliter"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "tsp",
                            IsDeleted = false,
                            Name = "Teaspoon"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "tbsp",
                            IsDeleted = false,
                            Name = "Tablespoon"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "cup",
                            IsDeleted = false,
                            Name = "Cup"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "fl oz",
                            IsDeleted = false,
                            Name = "Fluid Ounce"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PreparationSteps")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CookId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 10, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Spaghetti Aglio e Olio",
                            PreparationSteps = "Cook the spaghetti in salted boiling water until al dente. Reserve some pasta water before draining. Heat olive oil in a pan over medium heat, then add thinly sliced garlic and chili flakes. Sauté until fragrant but not browned.Add the cooked spaghetti to the pan and toss with the garlic oil. Add reserved pasta water to loosen the sauce if needed. Season with salt and pepper to taste, garnish with fresh parsley, and serve.",
                            UpdatedOn = new DateTime(2024, 10, 6, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Quinoa Salad",
                            PreparationSteps = "Cook quinoa in water (you can use vegetable broth if you like). Let it cool. In a large bowl, combine diced cucumber, cherry tomatoes, red onion, and avocado. Add the cooled quinoa and mix well. In a small bowl, whisk together lemon juice, olive oil, tahini, salt, and pepper. Pour the dressing over the salad and toss. Garnish with fresh herbs like parsley and cilantro and serve chilled.",
                            UpdatedOn = new DateTime(2024, 9, 15, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CookId = 3,
                            CreatedOn = new DateTime(2024, 8, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Gluten-Free Almond Pancakes",
                            PreparationSteps = "In a bowl, whisk together almond flour, eggs, baking powder, vanilla extract, and a pinch of salt until smooth. Heat a non-stick pan over medium heat and grease lightly with butter. Pour small amounts of batter onto the pan and cook until bubbles form on the surface, then flip and cook the other side until golden brown. Serve pancakes with fresh berries, maple syrup, and a sprinkle of almond slices for garnish.",
                            UpdatedOn = new DateTime(2024, 8, 22, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CookId = 1,
                            CreatedOn = new DateTime(2024, 7, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Spicy Chicken Tacos",
                            PreparationSteps = "Marinate chicken breast in a mixture of chili powder, cumin, paprika, garlic, lime juice, and olive oil for at least 30 minutes. Cook the marinated chicken in a pan over medium heat until fully cooked and slightly charred. Warm the taco shells in the oven or on a pan. Assemble the tacos by adding chicken, finely chopped ripe tomatoes, onion, cilantro, jalapeño, and lime, and avocado.",
                            UpdatedOn = new DateTime(2024, 7, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CookId = 3,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 3,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Classic Beef Stroganoff",
                            PreparationSteps = "Cook egg noodles according to package instructions, drain, and set aside. In a large pan, brown strips of beef in butter over high heat. Remove from the pan and set aside. In the same pan, sauté onions and mushrooms until softened. Add garlic and cook for another minute. Stir in beef broth, mustard, and Worcestershire sauce, then return the beef to the pan. Reduce heat, stir in sour cream, and simmer until the sauce thickens. Serve the beef stroganoff over egg noodles, garnished with fresh parsley.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CookId = 1,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Granny`s Homemade Mayo",
                            PreparationSteps = "Place oil, egg, lemon juice, Dijon mustard, salt, and pepper in a large bowl.Use a hand-held immersion blender to blend mixture until fully emulsified, taking care not to over-blend. Store in a tightly closed container; refrigerate until using.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CookId = 3,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Banana Bread",
                            PreparationSteps = "In a mixing bowl, mash the ripe bananas with a fork until completely smooth. Stir the melted butter into the mashed bananas.Mix in the baking soda and salt. Stir in the sugar, beaten egg, and vanilla extract. Mix in the flour.Pour the batter into your prepared loaf pan.Bake for 55 to 65 minutes at 175°C, or until a toothpick or wooden skewer inserted into the center comes out clean. Cool and serve.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Mochi",
                            PreparationSteps = "Wrap red bean paste in aluminum foil and place in the freezer until solid, at least 1 hour.Mix glutinous rice flour and green tea powder thoroughly in a microwave-safe bowl.Stir in water, then sugar; mix until smooth.Cover the bowl with plastic wrap and microwave for 3 minutes 30 seconds.Meanwhile, remove red bean paste from the freezer and divide into 8 equal balls. Set aside.Remove rice flour mixture from the microwave. Stir and heat, covered, for another 15 to 30 seconds.Dust a work surface with cornstarch. Roll about 2 tablespoons of hot rice flour mixture into a ball. Flatten the ball and place one ball of frozen red bean paste in the center. Pinch and press the dough around the bean paste until completely covered.Sprinkle with additional cornstarch and place mochi, seam-side down, in a paper muffin liner to prevent sticking.Enjoy!",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CookId = 1,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Choco Chip Cookies",
                            PreparationSteps = "Preheat oven to 375 degrees F. Line three baking sheets with parchment paper and set aside. In a medium bowl mix flour, baking soda, baking powder and salt. Set aside. Cream together butter and sugars until combined. Beat in eggs and vanilla until light (about 1 minute). Mix in the dry ingredients until combined. Add chocolate chips and mix well. Roll 2-3 Tablespoons (depending on how large you like your cookies) of dough at a time into balls and place them evenly spaced on your prepared cookie sheets. Bake in preheated oven for approximately 8-10 minutes. Take them out when they are just barely starting to turn brown. Let them sit on the baking pan for 5 minutes before removing to cooling rack.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Pumpkin Soup",
                            PreparationSteps = "Preheat oven to 425 degrees Fahrenheit and line a baking sheet with parchment paper for easy cleanup. Carefully halve the pumpkin and scoop out the seeds.Slice each pumpkin halve in half to make quarters. Brush or rub 1 tablespoon olive oil over the flesh of the pumpkin and place the quarters, cut sides down, onto the baking sheet. Roast for 35 minutes or longer, until the orange flesh is easily pierced through with a fork. Set it aside to cool for a few minutes.Heat the remaining 3 tablespoons olive oil in a large Dutch oven or heavy-bottomed pot over medium heat. Once the oil is shimmering, add onion, garlic and salt to the skillet. Stir to combine. Cook, stirring occasionally, until onion is translucent, about 8 to 10 minutes. Peel the pumpkin skin off the pumpkins and discard the skin.Add the pumpkin flesh, cinnamon, nutmeg and ground black pepper. Use your stirring spoon to break up the pumpkin a bit. Pour in the broth. Bring the mixture to a boil, then reduce heat and simmer for about 15 minutes, to give the flavors time to meld. Toast the pumpkin seeds in a medium skillet over medium-low heat, stirring frequently, until fragrant, golden and making little popping noises.Once the pumpkin mixture is done cooking, stir in the coconut milk and maple syrup. Remove the soup from heat and let it cool slightly. You can use an immersion blender to blend this soup in the pot. Securely fasten the blender’s lid and use a kitchen towel to protect your hand from steam escaping from the top of the blender as you purée the mixture until smooth. Transfer the puréed soup to a serving bowl and repeat with the remaining batches.Taste and adjust if necessary.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Easy Weeknight Spaghetti",
                            PreparationSteps = "To a large pan, add the pasta, cover with 3 cups cold water, optional salt to taste, and boil over high heat until water has absorbed, about 10 minutes, but watch your pasta and cook as needed until al dente. While pasta boils, brown the ground beef. To a large skillet, add the ground beef and cook over medium-high heat, breaking up the meat with a spatula as it cooks to ensure even cooking. After beef has cooked through, add the pasta sauce, stir to combine, and cook for 1 to 2 minutes, or until heated through. After pasta has cooked for about 10 minutes, or until all the water has been absorbed, add the sauce over the pasta and toss to combine in the skillet or alternatively plate the pasta and add sauce to each individual plate as desired.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RecipeId = 1,
                            Url = "https://images.unsplash.com/photo-1562281556-0f8c259a9f3a?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RecipeId = 2,
                            Url = "https://plus.unsplash.com/premium_photo-1704989936092-c41f477cb6e2?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RecipeId = 3,
                            Url = "https://images.unsplash.com/photo-1522248105696-9625ba87de6e?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RecipeId = 4,
                            Url = "https://images.unsplash.com/photo-1596078841464-028efe9ddced?q=80&w=1964&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RecipeId = 5,
                            Url = "https://media.istockphoto.com/id/817313114/photo/mushroom-beef-stroganoff-in-pan-with-copy-space.jpg?s=2048x2048&w=is&k=20&c=X6NMh7o18JfGseHdb1UwOzHWxpwC7kpwEDsJcvDrAms="
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            RecipeId = 6,
                            Url = "https://plus.unsplash.com/premium_photo-1664391870099-a7d4976fd8e9?q=80&w=1966&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            RecipeId = 8,
                            Url = "https://plus.unsplash.com/premium_photo-1700590072619-46364c033a1b?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTd8fG1vY2hpfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            RecipeId = 8,
                            Url = "https://images.unsplash.com/photo-1629984169599-184e84223c1e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fG1vY2hpfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            RecipeId = 9,
                            Url = "https://images.unsplash.com/photo-1724424280324-7d8e35196bde?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8Y2hvY29jaGlwfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            RecipeId = 10,
                            Url = "https://plus.unsplash.com/premium_photo-1669559809094-1d6942e1531e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8cHVtcGtpbiUyMHNvdXB8ZW58MHx8MHx8fDA%3D"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<long?>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("MeasurementUnitId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 51,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 500L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 2L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            IngredientId = 9,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            IngredientId = 52,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 7,
                            IngredientId = 54,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 250L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            IngredientId = 55,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 9,
                            IngredientId = 56,
                            IsDeleted = false,
                            Quantity = 5L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 10,
                            IngredientId = 57,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 11,
                            IngredientId = 58,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 12,
                            IngredientId = 18,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 13,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 2L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 14,
                            IngredientId = 59,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 15,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 16,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 17,
                            IngredientId = 21,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 18,
                            IngredientId = 60,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 19,
                            IngredientId = 61,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 200L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 20,
                            IngredientId = 2,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 21,
                            IngredientId = 42,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 22,
                            IngredientId = 47,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 23,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 24,
                            IngredientId = 6,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 25,
                            IngredientId = 62,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 26,
                            IngredientId = 41,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 27,
                            IngredientId = 15,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 28,
                            IngredientId = 11,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 500L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 29,
                            IngredientId = 63,
                            IsDeleted = false,
                            Quantity = 4L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 30,
                            IngredientId = 8,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 31,
                            IngredientId = 9,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 32,
                            IngredientId = 19,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 33,
                            IngredientId = 10,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 34,
                            IngredientId = 58,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 35,
                            IngredientId = 60,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 36,
                            IngredientId = 69,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 37,
                            IngredientId = 53,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 38,
                            IngredientId = 45,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 39,
                            IngredientId = 50,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 40,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 2L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 41,
                            IngredientId = 65,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 200L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 42,
                            IngredientId = 70,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 300L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 43,
                            IngredientId = 10,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 44,
                            IngredientId = 22,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 250L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 45,
                            IngredientId = 9,
                            IsDeleted = false,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 46,
                            IngredientId = 66,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 2L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 47,
                            IngredientId = 67,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 48,
                            IngredientId = 68,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 100L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 49,
                            IngredientId = 21,
                            IsDeleted = false,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 50,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 51,
                            IngredientId = 2,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 52,
                            IngredientId = 18,
                            IsDeleted = false,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 53,
                            IngredientId = 66,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 1L,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 54,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 55,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 56,
                            IngredientId = 71,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 57,
                            IngredientId = 6,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 80L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 58,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 59,
                            IngredientId = 42,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 1L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 60,
                            IngredientId = 75,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 150L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 61,
                            IngredientId = 2,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 62,
                            IngredientId = 47,
                            IsDeleted = false,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 63,
                            IngredientId = 72,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 200L,
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 64,
                            IngredientId = 79,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 65,
                            IngredientId = 81,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 66,
                            IngredientId = 85,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 67,
                            IngredientId = 86,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 68,
                            IngredientId = 76,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 100L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 69,
                            IngredientId = 95,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 50L,
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 70,
                            IngredientId = 6,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 71,
                            IngredientId = 3,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 72,
                            IngredientId = 75,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 1L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 73,
                            IngredientId = 47,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 2L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 74,
                            IngredientId = 1,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 3L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 75,
                            IngredientId = 42,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 76,
                            IngredientId = 5,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 77,
                            IngredientId = 92,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 2L,
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 78,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 6L,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 79,
                            IngredientId = 93,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 80,
                            IngredientId = 10,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 81,
                            IngredientId = 9,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 82,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 83,
                            IngredientId = 44,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 84,
                            IngredientId = 94,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 85,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 86,
                            IngredientId = 96,
                            IsDeleted = false,
                            MeasurementUnitId = 10,
                            Quantity = 4L,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 87,
                            IngredientId = 24,
                            IsDeleted = false,
                            MeasurementUnitId = 7,
                            Quantity = 100L,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 88,
                            IngredientId = 41,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 2L,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 89,
                            IngredientId = 98,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 100L,
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 90,
                            IngredientId = 51,
                            IsDeleted = false,
                            MeasurementUnitId = 4,
                            Quantity = 12L,
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 91,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 92,
                            IngredientId = 20,
                            IsDeleted = false,
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 93,
                            IngredientId = 82,
                            IsDeleted = false,
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 94,
                            IngredientId = 12,
                            IsDeleted = false,
                            MeasurementUnitId = 5,
                            Quantity = 1L,
                            RecipeId = 11
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RecipeId = 3,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 5
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RecipeId = 2,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 4
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RecipeId = 5,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 5
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RecipeId = 1,
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            Value = 5
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RecipeId = 4,
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            Value = 5
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId");

                    b.ToTable("Replies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Generally the beef strips need to be seared, not completely cooked so anything between 3 to 5 minutes at max heat.",
                            CommentId = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Thank you! :)",
                            CommentId = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Favorite pancakes",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Quinoa Salad NOM NOM",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.CategoryRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesRecipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 4
                        },
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 8
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 10
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 6
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 11
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 16
                        },
                        new
                        {
                            RecipeId = 4,
                            CategoryId = 18
                        },
                        new
                        {
                            RecipeId = 4,
                            CategoryId = 16
                        },
                        new
                        {
                            RecipeId = 5,
                            CategoryId = 21
                        },
                        new
                        {
                            RecipeId = 6,
                            CategoryId = 15
                        },
                        new
                        {
                            RecipeId = 7,
                            CategoryId = 2
                        },
                        new
                        {
                            RecipeId = 7,
                            CategoryId = 16
                        },
                        new
                        {
                            RecipeId = 7,
                            CategoryId = 20
                        },
                        new
                        {
                            RecipeId = 8,
                            CategoryId = 1
                        },
                        new
                        {
                            RecipeId = 8,
                            CategoryId = 2
                        },
                        new
                        {
                            RecipeId = 9,
                            CategoryId = 20
                        },
                        new
                        {
                            RecipeId = 9,
                            CategoryId = 2
                        },
                        new
                        {
                            RecipeId = 10,
                            CategoryId = 12
                        },
                        new
                        {
                            RecipeId = 11,
                            CategoryId = 4
                        },
                        new
                        {
                            RecipeId = 11,
                            CategoryId = 8
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.ShoppingListRecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.HasKey("RecipeIngredientId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListsRecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeIngredientId = 18,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 19,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 20,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 21,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 22,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 23,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 24,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 25,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 26,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 7,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 8,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 9,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 10,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 11,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 12,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 13,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 14,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 15,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 16,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 17,
                            ShoppingListId = 2
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.UserFavoriteRecipe", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UsersFavoriteRecipes");

                    b.HasData(
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 2
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 3
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 5
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 2
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 1
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 6
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 7
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 7
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 8
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 9
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 11
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.CookingRank", "CookingRank")
                        .WithMany("CooksWithThatRank")
                        .HasForeignKey("CookingRankId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("CookingRank");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Cook", "Cook")
                        .WithMany("Recipes")
                        .HasForeignKey("CookId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cook");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeImage", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeImages")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.MeasurementUnit", "MeasurementUnit")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("MeasurementUnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("MeasurementUnit");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeRating", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeRatings")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany("RecipesRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Reply", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Comment", "Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany("Replies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.CategoryRecipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Category", "Category")
                        .WithMany("CategoryRecipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("CategoryRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.ShoppingListRecipeIngredient", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.RecipeIngredient", "RecipeIngredient")
                        .WithMany("ShoppingListRecipeIngredients")
                        .HasForeignKey("RecipeIngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListRecipeIngredients")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RecipeIngredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.UserFavoriteRecipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("UserFavoriteRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.AppUser", "AppUser")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteRecipes");

                    b.Navigation("RecipesRatings");

                    b.Navigation("Replies");

                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryRecipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.CookingRank", b =>
                {
                    b.Navigation("CooksWithThatRank");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.MeasurementUnit", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("CategoryRecipes");

                    b.Navigation("Comments");

                    b.Navigation("RecipeImages");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeRatings");

                    b.Navigation("UserFavoriteRecipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Navigation("ShoppingListRecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListRecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
