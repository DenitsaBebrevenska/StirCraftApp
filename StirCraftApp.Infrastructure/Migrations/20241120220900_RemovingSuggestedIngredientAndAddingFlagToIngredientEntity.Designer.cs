// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StirCraftApp.Infrastructure.Data;

#nullable disable

namespace StirCraftApp.Infrastructure.Migrations
{
    [DbContext(typeof(StirCraftDbContext))]
    [Migration("20241120220900_RemovingSuggestedIngredientAndAddingFlagToIngredientEntity")]
    partial class RemovingSuggestedIngredientAndAddingFlagToIngredientEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "eec0c147-bcdc-49f0-aadc-9b2d906ee763",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c63bad56-e374-4a01-ac1a-f49231cd1e2f",
                            Name = "Cook",
                            NormalizedName = "COOK"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "98f61b51-9ae7-4107-a247-29d1c68a7d32",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce",
                            RoleId = "c63bad56-e374-4a01-ac1a-f49231cd1e2f"
                        },
                        new
                        {
                            UserId = "6d362fcc-dc94-4385-8b38-844527a2c579",
                            RoleId = "eec0c147-bcdc-49f0-aadc-9b2d906ee763"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Asian Cuisine"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Amuse Bouche"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Italian Cuisine"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Grill & Barbecue"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Vegetarian"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Vegan"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Soups & Stews"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Comfort Food"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Name = "French Cuisine"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Name = "Mexican Cuisine"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Name = "Mediterranean Cuisine"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Name = "Baking & Pastries"
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            Name = "Russian Cuisine"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "My grandchildren love these pancakes! They are a very good choice for a healthy breakfast!",
                            IsDeleted = false,
                            RecipeId = 3,
                            Title = "Fabulous!",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 2,
                            Body = "So delicious, yet so healthy!",
                            IsDeleted = false,
                            RecipeId = 2,
                            Title = "Awesome salad",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        },
                        new
                        {
                            Id = 3,
                            Body = "I really need help. How long should I cook the beef strips for? I`m afraid they`ll end up raw...",
                            IsDeleted = false,
                            RecipeId = 5,
                            Title = "Need help!",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CookingRankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RankingPoints")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CookingRankId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "I am a home cook with love for classic comfort foods. I often experiment with traditional recipes, adding my personal twist to create something familiar yet unique.",
                            CookingRankId = 1,
                            IsDeleted = false,
                            RankingPoints = 10L,
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb"
                        },
                        new
                        {
                            Id = 2,
                            About = "Inspired by my travels, I enjoy combining fresh, vibrant ingredients like olive oil, herbs, and seafood to create dishes that are both healthy and full of flavor. My philosophy in cooking revolves around simplicity. I love the Mediterranean Cuisine.",
                            CookingRankId = 3,
                            IsDeleted = false,
                            RankingPoints = 1200L,
                            UserId = "98f61b51-9ae7-4107-a247-29d1c68a7d32"
                        },
                        new
                        {
                            Id = 3,
                            About = "I am passionate about modern fusion cuisine, blending flavors and techniques from around the world. I think of myself as quite innovative in the use of seasonal ingredients and attention to detail, making every meal an unforgettable experience. Also I excel at Asian cuisine, you can call me Senpai!",
                            CookingRankId = 5,
                            IsDeleted = false,
                            RankingPoints = 2200L,
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.CookingRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RequiredPoints")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("CookingRanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RequiredPoints = 0L,
                            Title = "StirCraftNovice"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RequiredPoints = 500L,
                            Title = "StirSpecialist"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RequiredPoints = 1000L,
                            Title = "FlavorOperative"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RequiredPoints = 1500L,
                            Title = "SeasonedCommander"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RequiredPoints = 2000L,
                            Title = "MasterOfStirCraft"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            RequiredPoints = 3000L,
                            Title = "CulinaryOverlord"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            RequiredPoints = 5000L,
                            Title = "StirCraftGod"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllergen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSolid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameInPlural")
                        .HasMaxLength(104)
                        .HasColumnType("nvarchar(104)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "flour"
                        },
                        new
                        {
                            Id = 2,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "egg",
                            NameInPlural = "eggs"
                        },
                        new
                        {
                            Id = 3,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "sugar"
                        },
                        new
                        {
                            Id = 4,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "milk"
                        },
                        new
                        {
                            Id = 5,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "salt"
                        },
                        new
                        {
                            Id = 6,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "butter"
                        },
                        new
                        {
                            Id = 7,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "olive oil"
                        },
                        new
                        {
                            Id = 8,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "tomato",
                            NameInPlural = "tomatoes"
                        },
                        new
                        {
                            Id = 9,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "garlic"
                        },
                        new
                        {
                            Id = 10,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "onion",
                            NameInPlural = "onions"
                        },
                        new
                        {
                            Id = 11,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "chicken breast",
                            NameInPlural = "chicken breasts"
                        },
                        new
                        {
                            Id = 12,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "ground beef"
                        },
                        new
                        {
                            Id = 13,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "carrot",
                            NameInPlural = "carrots"
                        },
                        new
                        {
                            Id = 14,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "celery",
                            NameInPlural = "celeries"
                        },
                        new
                        {
                            Id = 15,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "almond",
                            NameInPlural = "almonds"
                        },
                        new
                        {
                            Id = 16,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "peanut",
                            NameInPlural = "peanuts"
                        },
                        new
                        {
                            Id = 17,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "soy sauce"
                        },
                        new
                        {
                            Id = 18,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "lemon",
                            NameInPlural = "lemons"
                        },
                        new
                        {
                            Id = 19,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "lime",
                            NameInPlural = "limes"
                        },
                        new
                        {
                            Id = 20,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "basil"
                        },
                        new
                        {
                            Id = 21,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "parsley"
                        },
                        new
                        {
                            Id = 22,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "mushroom",
                            NameInPlural = "mushrooms"
                        },
                        new
                        {
                            Id = 23,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "spinach"
                        },
                        new
                        {
                            Id = 24,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "coconut milk"
                        },
                        new
                        {
                            Id = 25,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "shrimp",
                            NameInPlural = "shrimps"
                        },
                        new
                        {
                            Id = 26,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "salmon",
                            NameInPlural = "salmons"
                        },
                        new
                        {
                            Id = 27,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "tofu"
                        },
                        new
                        {
                            Id = 28,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "chickpeas"
                        },
                        new
                        {
                            Id = 29,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "potato",
                            NameInPlural = "potatoes"
                        },
                        new
                        {
                            Id = 30,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "rice"
                        },
                        new
                        {
                            Id = 31,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "pasta"
                        },
                        new
                        {
                            Id = 32,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "broccoli"
                        },
                        new
                        {
                            Id = 33,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cauliflower"
                        },
                        new
                        {
                            Id = 34,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "green beans"
                        },
                        new
                        {
                            Id = 35,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "zucchini",
                            NameInPlural = "zucchinis"
                        },
                        new
                        {
                            Id = 36,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "corn",
                            NameInPlural = "corns"
                        },
                        new
                        {
                            Id = 37,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cheese"
                        },
                        new
                        {
                            Id = 38,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cream"
                        },
                        new
                        {
                            Id = 39,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "yogurt"
                        },
                        new
                        {
                            Id = 40,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "honey"
                        },
                        new
                        {
                            Id = 41,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "maple syrup"
                        },
                        new
                        {
                            Id = 42,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "baking powder"
                        },
                        new
                        {
                            Id = 43,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "yeast"
                        },
                        new
                        {
                            Id = 44,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cinnamon"
                        },
                        new
                        {
                            Id = 45,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cumin"
                        },
                        new
                        {
                            Id = 46,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "ginger"
                        },
                        new
                        {
                            Id = 47,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "vanilla extract"
                        },
                        new
                        {
                            Id = 48,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "black pepper"
                        },
                        new
                        {
                            Id = 49,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "oregano"
                        },
                        new
                        {
                            Id = 50,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "paprika"
                        },
                        new
                        {
                            Id = 51,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "spaghetti"
                        },
                        new
                        {
                            Id = 52,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "chili flakes"
                        },
                        new
                        {
                            Id = 53,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "chili powder"
                        },
                        new
                        {
                            Id = 54,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "quinoa"
                        },
                        new
                        {
                            Id = 55,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cucumber",
                            NameInPlural = "cucumbers"
                        },
                        new
                        {
                            Id = 56,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cherry tomato",
                            NameInPlural = "cherry tomatoes"
                        },
                        new
                        {
                            Id = 57,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "red onion",
                            NameInPlural = "red onions"
                        },
                        new
                        {
                            Id = 58,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "avocado",
                            NameInPlural = "avocadoes"
                        },
                        new
                        {
                            Id = 59,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "tahini"
                        },
                        new
                        {
                            Id = 60,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "cilantro"
                        },
                        new
                        {
                            Id = 61,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "almond flour"
                        },
                        new
                        {
                            Id = 62,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "berries mix"
                        },
                        new
                        {
                            Id = 63,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "taco shell",
                            NameInPlural = "taco shells"
                        },
                        new
                        {
                            Id = 64,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "tortilla",
                            NameInPlural = "tortillas"
                        },
                        new
                        {
                            Id = 65,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "egg noodles"
                        },
                        new
                        {
                            Id = 66,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "mustard"
                        },
                        new
                        {
                            Id = 67,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = false,
                            Name = "Worcestershire sauce"
                        },
                        new
                        {
                            Id = 68,
                            IsAdminApproved = false,
                            IsAllergen = true,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "sour cream"
                        },
                        new
                        {
                            Id = 69,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "jalapeño",
                            NameInPlural = "jalapeños"
                        },
                        new
                        {
                            Id = 70,
                            IsAdminApproved = false,
                            IsAllergen = false,
                            IsDeleted = false,
                            IsSolid = true,
                            Name = "beef"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLiquidSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSolidSpecific")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("MeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "g",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = true,
                            Name = "Gram"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "kg",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = true,
                            Name = "Kilogram"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "mg",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = true,
                            Name = "Milligram"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "oz",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = true,
                            Name = "Ounce"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "lb",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = true,
                            Name = "Pound"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "L",
                            IsDeleted = false,
                            IsLiquidSpecific = true,
                            IsSolidSpecific = false,
                            Name = "Liter"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "mL",
                            IsDeleted = false,
                            IsLiquidSpecific = true,
                            IsSolidSpecific = false,
                            Name = "Milliliter"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "tsp",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = false,
                            Name = "Teaspoon"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "tbsp",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = false,
                            Name = "Tablespoon"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "cup",
                            IsDeleted = false,
                            IsLiquidSpecific = false,
                            IsSolidSpecific = false,
                            Name = "Cup"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "fl oz",
                            IsDeleted = false,
                            IsLiquidSpecific = true,
                            IsSolidSpecific = false,
                            Name = "Fluid Ounce"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PreparationSteps")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CookId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 10, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 1,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Spaghetti Aglio e Olio",
                            PreparationSteps = "Cook the spaghetti in salted boiling water until al dente. Reserve some pasta water before draining. Heat olive oil in a pan over medium heat, then add thinly sliced garlic and chili flakes. Sauté until fragrant but not browned.Add the cooked spaghetti to the pan and toss with the garlic oil. Add reserved pasta water to loosen the sauce if needed. Season with salt and pepper to taste, garnish with fresh parsley, and serve.",
                            UpdatedOn = new DateTime(2024, 10, 6, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CookId = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Quinoa Salad",
                            PreparationSteps = "Cook quinoa in water (you can use vegetable broth if you like). Let it cool. In a large bowl, combine diced cucumber, cherry tomatoes, red onion, and avocado. Add the cooled quinoa and mix well. In a small bowl, whisk together lemon juice, olive oil, tahini, salt, and pepper. Pour the dressing over the salad and toss. Garnish with fresh herbs like parsley and cilantro and serve chilled.",
                            UpdatedOn = new DateTime(2024, 9, 15, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CookId = 3,
                            CreatedOn = new DateTime(2024, 8, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Gluten-Free Almond Pancakes",
                            PreparationSteps = "In a bowl, whisk together almond flour, eggs, baking powder, vanilla extract, and a pinch of salt until smooth. Heat a non-stick pan over medium heat and grease lightly with butter. Pour small amounts of batter onto the pan and cook until bubbles form on the surface, then flip and cook the other side until golden brown. Serve pancakes with fresh berries, maple syrup, and a sprinkle of almond slices for garnish.",
                            UpdatedOn = new DateTime(2024, 8, 22, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CookId = 1,
                            CreatedOn = new DateTime(2024, 7, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 2,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Spicy Chicken Tacos",
                            PreparationSteps = "Marinate chicken breast in a mixture of chili powder, cumin, paprika, garlic, lime juice, and olive oil for at least 30 minutes. Cook the marinated chicken in a pan over medium heat until fully cooked and slightly charred. Warm the taco shells in the oven or on a pan. Assemble the tacos by adding chicken, finely chopped ripe tomatoes, onion, cilantro, jalapeño, and lime, and avocado.",
                            UpdatedOn = new DateTime(2024, 7, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CookId = 3,
                            CreatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DifficultyLevel = 3,
                            IsAdminApproved = true,
                            IsDeleted = false,
                            Name = "Classic Beef Stroganoff",
                            PreparationSteps = "Cook egg noodles according to package instructions, drain, and set aside. In a large pan, brown strips of beef in butter over high heat. Remove from the pan and set aside. In the same pan, sauté onions and mushrooms until softened. Add garlic and cook for another minute. Stir in beef broth, mustard, and Worcestershire sauce, then return the beef to the pan. Reduce heat, stir in sour cream, and simmer until the sauce thickens. Serve the beef stroganoff over egg noodles, garnished with fresh parsley.",
                            UpdatedOn = new DateTime(2024, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RecipeId = 1,
                            Url = "https://images.unsplash.com/photo-1562281556-0f8c259a9f3a?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RecipeId = 2,
                            Url = "https://plus.unsplash.com/premium_photo-1704989936092-c41f477cb6e2?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RecipeId = 3,
                            Url = "https://images.unsplash.com/photo-1522248105696-9625ba87de6e?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RecipeId = 4,
                            Url = "https://images.unsplash.com/photo-1596078841464-028efe9ddced?q=80&w=1964&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RecipeId = 5,
                            Url = "https://media.istockphoto.com/id/817313114/photo/mushroom-beef-stroganoff-in-pan-with-copy-space.jpg?s=2048x2048&w=is&k=20&c=X6NMh7o18JfGseHdb1UwOzHWxpwC7kpwEDsJcvDrAms="
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<long?>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("MeasurementUnitId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 51,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 500L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 2L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            IngredientId = 9,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            IngredientId = 52,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 7,
                            IngredientId = 54,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 250L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            IngredientId = 55,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 9,
                            IngredientId = 56,
                            IsDeleted = false,
                            Quantity = 5L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 10,
                            IngredientId = 57,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 11,
                            IngredientId = 58,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 12,
                            IngredientId = 18,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 13,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 2L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 14,
                            IngredientId = 59,
                            IsDeleted = false,
                            MeasurementUnitId = 9,
                            Quantity = 1L,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 15,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 16,
                            IngredientId = 48,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 17,
                            IngredientId = 21,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 18,
                            IngredientId = 60,
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 19,
                            IngredientId = 61,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 200L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 20,
                            IngredientId = 2,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 21,
                            IngredientId = 42,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 22,
                            IngredientId = 47,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 23,
                            IngredientId = 5,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 24,
                            IngredientId = 6,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 25,
                            IngredientId = 62,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 26,
                            IngredientId = 41,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 27,
                            IngredientId = 15,
                            IsDeleted = false,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 28,
                            IngredientId = 11,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 500L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 29,
                            IngredientId = 63,
                            IsDeleted = false,
                            Quantity = 4L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 30,
                            IngredientId = 8,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 31,
                            IngredientId = 9,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 32,
                            IngredientId = 19,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 33,
                            IngredientId = 10,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 34,
                            IngredientId = 58,
                            IsDeleted = false,
                            Quantity = 1L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 35,
                            IngredientId = 60,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 36,
                            IngredientId = 69,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 37,
                            IngredientId = 53,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 38,
                            IngredientId = 45,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 39,
                            IngredientId = 50,
                            IsDeleted = false,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 40,
                            IngredientId = 7,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 2L,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 41,
                            IngredientId = 65,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 200L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 42,
                            IngredientId = 70,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 300L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 43,
                            IngredientId = 10,
                            IsDeleted = false,
                            Quantity = 2L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 44,
                            IngredientId = 22,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 250L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 45,
                            IngredientId = 9,
                            IsDeleted = false,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 46,
                            IngredientId = 66,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 2L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 47,
                            IngredientId = 67,
                            IsDeleted = false,
                            MeasurementUnitId = 8,
                            Quantity = 1L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 48,
                            IngredientId = 68,
                            IsDeleted = false,
                            MeasurementUnitId = 1,
                            Quantity = 100L,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 49,
                            IngredientId = 21,
                            IsDeleted = false,
                            RecipeId = 5
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RecipeId = 3,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 5
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RecipeId = 2,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 4
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RecipeId = 5,
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            Value = 5
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RecipeId = 1,
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            Value = 5
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            RecipeId = 4,
                            UserId = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            Value = 5
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId");

                    b.ToTable("Replies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Generally the beef strips need to be seared, not completely cooked so anything between 3 to 5 minutes at max heat.",
                            CommentId = 3,
                            IsDeleted = false,
                            UserId = "1a575c2a-065c-487a-8b56-cfd897b1b5ce"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Thank you! :)",
                            CommentId = 3,
                            IsDeleted = false,
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Favorite pancakes",
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Quinoa Salad NOM NOM",
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a"
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.CategoryRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesRecipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 4
                        },
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 8
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 10
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 6
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 11
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 16
                        },
                        new
                        {
                            RecipeId = 4,
                            CategoryId = 18
                        },
                        new
                        {
                            RecipeId = 4,
                            CategoryId = 16
                        },
                        new
                        {
                            RecipeId = 5,
                            CategoryId = 21
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.ShoppingListRecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.HasKey("RecipeIngredientId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListsRecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeIngredientId = 18,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 19,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 20,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 21,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 22,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 23,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 24,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 25,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 26,
                            ShoppingListId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 7,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 8,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 9,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 10,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 11,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 12,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 13,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 14,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 15,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 16,
                            ShoppingListId = 2
                        },
                        new
                        {
                            RecipeIngredientId = 17,
                            ShoppingListId = 2
                        });
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.UserFavoriteRecipe", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UsersFavoriteRecipes");

                    b.HasData(
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 2
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 3
                        },
                        new
                        {
                            UserId = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            RecipeId = 5
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 2
                        },
                        new
                        {
                            UserId = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("StirCraftApp.Infrastructure.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique()
                        .HasFilter("[DisplayName] IS NOT NULL");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f44c3f06-172b-491e-b71d-8672ac7595cb",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1677852512190-5a89ee399aed?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "9b6d00cb-b731-47d5-9c57-870ed8fbc0ce",
                            DisplayName = "ChefBob",
                            Email = "bob@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BOB@EXAMPLE.COM",
                            NormalizedUserName = "BOB@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGDljjA43OILJV1euwFyojKHWUSNIvXK+Rhg3243tpCQ+AtZKnvfS8LTh0ZgpUMfwA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1ed1a42-2a60-4dfc-b653-8dbc210bd337",
                            TwoFactorEnabled = false,
                            UserName = "bob@example.com"
                        },
                        new
                        {
                            Id = "edc8a753-f0dc-483f-bbaf-d26dc2827d54",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1661768360749-b60196445a6d?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "7b6da351-4c35-4cdc-b1e1-5ce6bf7c0ca6",
                            DisplayName = "KateMiddleton",
                            Email = "kate@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "KATE@EXAMPLE.COM",
                            NormalizedUserName = "KATE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBbg1mE+SVoksD7Pczm7ah781pjPckKFR6y2f+axhFqqgs9jJkBkapyZ2iYQyi+ICg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "947580b0-f2ed-4f70-9892-2c109facb7f3",
                            TwoFactorEnabled = false,
                            UserName = "kate@example.com"
                        },
                        new
                        {
                            Id = "98f61b51-9ae7-4107-a247-29d1c68a7d32",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1673830185832-2d5f30a900ed?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "5387e17b-1d73-4397-8bc8-63f09066b4a0",
                            DisplayName = "AdrianTheAdventurer",
                            Email = "adrian@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADRIAN@EXAMPLE.COM",
                            NormalizedUserName = "ADRIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOENAv4c/Z5XED4SytlGBtzcY6wjf+hNwxZQqA459EkhjpedwoYIM6SlvAY2HxE3Dg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ba2663fd-f867-433b-b273-06a018fde2cc",
                            TwoFactorEnabled = false,
                            UserName = "adrian@example.com"
                        },
                        new
                        {
                            Id = "3b3c303f-b227-48d8-a30d-1932e90b058a",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1658506818080-0546c7636830?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "eaa5d6a3-27d4-4c5f-9d81-62645d9b183a",
                            DisplayName = "LoveLink",
                            Email = "zelda@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ZELDA@EXAMPLE.COM",
                            NormalizedUserName = "ZELDA@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEE9JZRsheOPobztcqGMOloPl/MPd2s+vCM8Y6oqifvuyJW2Dvf64THc8sjMB5zGCVg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5e5d057c-2b59-474e-9e5a-7ef7e644cbe2",
                            TwoFactorEnabled = false,
                            UserName = "zelda@example.com"
                        },
                        new
                        {
                            Id = "1a575c2a-065c-487a-8b56-cfd897b1b5ce",
                            AccessFailedCount = 0,
                            AvatarUrl = "https://plus.unsplash.com/premium_photo-1661778091956-15dbe6e47442?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            ConcurrencyStamp = "374ec5bc-076e-4e32-ba33-34d018bcb538",
                            DisplayName = "ThePowerOfMorgoth",
                            Email = "galadriel@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GALADRIEL@EXAMPLE.COM",
                            NormalizedUserName = "GALADRIEL@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELaTber0dcPqmwUrdPHVPaQkEVoqmRCK1Ca8YzKOyfo22vgGlXTFfCLt0kj6fbU3AQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d9aafda-138d-4cc6-af2b-82713fab5dbf",
                            TwoFactorEnabled = false,
                            UserName = "galadriel@example.com"
                        },
                        new
                        {
                            Id = "6d362fcc-dc94-4385-8b38-844527a2c579",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3acf0899-adf0-4327-9260-54ea285cd56e",
                            DisplayName = "StirCraftAdmin",
                            Email = "admin@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMz7rgxgYOdL3aXFtnVEHoqP2JMIU20aY9aigYBaXnUS0bf2l/cuF0sSyCtVooEayw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3d1d8a34-b38a-4f4c-b1a9-079c7193f2f4",
                            TwoFactorEnabled = false,
                            UserName = "admin@example.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.CookingRank", "CookingRank")
                        .WithMany("CooksWithThatRank")
                        .HasForeignKey("CookingRankId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithOne()
                        .HasForeignKey("StirCraftApp.Domain.Entities.Cook", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CookingRank");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Cook", "Cook")
                        .WithMany("Recipes")
                        .HasForeignKey("CookId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cook");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeImage", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeImages")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.MeasurementUnit", "MeasurementUnit")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("MeasurementUnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("MeasurementUnit");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeRating", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeRatings")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany("RecipesRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Reply", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Comment", "Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany("Replies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.CategoryRecipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Category", "Category")
                        .WithMany("CategoryRecipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("CategoryRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.ShoppingListRecipeIngredient", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.RecipeIngredient", "RecipeIngredient")
                        .WithMany("ShoppingListRecipeIngredients")
                        .HasForeignKey("RecipeIngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Domain.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListRecipeIngredients")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RecipeIngredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("StirCraftApp.Domain.JoinedTables.UserFavoriteRecipe", b =>
                {
                    b.HasOne("StirCraftApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("UserFavoriteRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StirCraftApp.Infrastructure.Identity.AppUser", null)
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryRecipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Cook", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.CookingRank", b =>
                {
                    b.Navigation("CooksWithThatRank");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.MeasurementUnit", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("CategoryRecipes");

                    b.Navigation("Comments");

                    b.Navigation("RecipeImages");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeRatings");

                    b.Navigation("UserFavoriteRecipes");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Navigation("ShoppingListRecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Domain.Entities.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListRecipeIngredients");
                });

            modelBuilder.Entity("StirCraftApp.Infrastructure.Identity.AppUser", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteRecipes");

                    b.Navigation("RecipesRatings");

                    b.Navigation("Replies");

                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
